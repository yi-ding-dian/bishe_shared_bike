#ifndef BRKS_COMMON_ENENT_TYPE_H_
#define BRKS_COMMON_ENENT_TYPE_H_

#include "glo_def.h"

typedef struct EErrorReason_		
{
	i32 code;
	const char* reason;
}EErrorReason;

/*事件ID*/
enum EventID
{
	EEVENTID_GET_MOBILE_CODE_REQ		= 0x01,//获取手机验证码请求
	EEVENTID_GET_MOBILE_CODE_RSP		= 0x02,//手机验证码响应

	EEVENTID_LOGIN_REQ					= 0x03,//登陆请求
	EEVENTID_LOGIN_RSP					= 0x04,//登陆响应

	EEVENTID_RECHARGE_REQ				= 0x05,//充电请求
	EEVENTID_RECHARGE_RSP				= 0x06,//充电响应

	EEVENTID_GET_ACCOUNT_BALANCE_REQ	= 0x07,//获取账号余额请求
	EEVENTID_ACCOUNT_BALANCE_RSP		= 0x08,//账号余额响应

	EEVENTID_LIST_ACCOUNT_RECORDS_REQ   = 0x09,//获取账户记录请求
	EEVENTID_ACCOUNT_RECORDS_RSP		= 0x10,//账户记录响应

	EEVENTID_LIST_TRAVELS_REQ			= 0x11,//获取足迹请求
	EEVENTID_LIST_TRAVELS_RSP			= 0x12,//足迹响应

	EEVNETID_EXIT_RSP = 0xFE,
	EEVNETID_UNKOWN = 0xFF
};

/*事件响应错误代号*/
enum EErrorCode
{
	ERRC_SUCCESS = 200,
	ERRC_INVALID_MSG = 400,
	ERRC_INVALID_DATA = 404,
	ERRC_METHOD_NOT_ALLOWED = 405,
	ERRO_PROCCESS_FALED = 406,
	ERRO_BIKE_IS_TOOK = 407,
	ERRO_BIKE_IS_RUNNING = 408,
	ERRO_BIKE_IS_DAMAGED = 409,
	ERRO_NULL = 0

};

const char* getReasonByErrorCode(i32 code);

#endif // !BRKS_COMMON_ENENT_TYPE_H_
